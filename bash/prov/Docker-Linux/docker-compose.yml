#Reference: https://github.com/htpcBeginner/docker-traefik/blob/master/docker-compose-t1.yml
#Requirement: Set environmental variables: USERDIR, PUID, PGID, MYSQL_ROOT_PASSWORD, and TZ as explained in the reference.

version: "3.7"

############################# NETWORKS

networks:
  default:
    driver: bridge

############################# SERVICES

services:

############################# FRONTENDS

  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/portainer/data:/data
      - ${USERDIR}/docker/shared:/shared
    environment:
      - TZ=${TZ}

  organizr:
    container_name: organizr
    restart: unless-stopped
    image: linuxserver/organizr
    volumes:
      - ${USERDIR}/docker/organizr:/config
      - ${USERDIR}/docker/shared:/shared
    ports:
      - "9983:80"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

############################# DATABASE

  mariadb:
    container_name: mariadb
    restart: unless-stopped
    image: mariadb
    networks:
      - default
    ports:
      - "3306:3306"
    volumes:
      - ${USERDIR}/docker/mariadb/data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=qwerty
      - MYSQL_DATABASE=test
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    hostname: phpmyadmin
    restart: unless-stopped
    networks:
      - default
    ports:
      - 8000:80
    environment:
      - PMA_PORT=3306
      - PMA_ARBITRARY=1
      - PMA_HOST=mariadb
    depends_on:
      - mariadb
    # When connecting to Mariadb from phpmyadmin, use 'mariadb' as the hostname

  # Grafana - Graphical data visualization for InfluxDB data
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    networks:
      - default
    ports:
      - "3000:3000"
    user: "0"
    volumes:
      - ${USERDIR}/docker/grafana:/var/lib/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel" 

  # Varken - Monitor Plex, Sonarr, Radarr, and Other Data
  varken:
    image: boerderij/varken
    hostname: varken
    container_name: varken
    restart: unless-stopped
    networks:
      - default
    volumes:
      - ${USERDIR}/docker/varken:/config
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      VRKN_GLOBAL_SONARR_SERVER_IDS: 1
      VRKN_GLOBAL_RADARR_SERVER_IDS: 1
      VRKN_GLOBAL_LIDARR_SERVER_IDS: "false"
      VRKN_GLOBAL_TAUTULLI_SERVER_IDS: 1
      VRKN_GLOBAL_OMBI_SERVER_IDS: "false"
      VRKN_GLOBAL_SICKCHILL_SERVER_IDS: "false"
      VRKN_GLOBAL_UNIFI_SERVER_IDS: 1
      VRKN_INFLUXDB_URL: ${SERVER_IP}
      VRKN_INFLUXDB_PORT: 8086
      VRKN_INFLUXDB_SSL: "false"
      VRKN_INFLUXDB_VERIFY_SSL: "false"
      VRKN_INFLUXDB_USERNAME: ${VARKEN_USER}
      VRKN_INFLUXDB_PASSWORD: ${VARKEN_PASS}
      VRKN_TAUTULLI_1_URL: ${SERVER_IP}:${TAUTULLI_PORT}
      VRKN_TAUTULLI_1_FALLBACK_IP: 1.1.1.1
      VRKN_TAUTULLI_1_APIKEY: ${TAUTULLI_API_KEY}
      VRKN_TAUTULLI_1_SSL: "false"
      VRKN_TAUTULLI_1_VERIFY_SSL: "false"
      VRKN_TAUTULLI_1_GET_ACTIVITY: "true"
      VRKN_TAUTULLI_1_GET_ACTIVITY_RUN_SECONDS: 30
      VRKN_TAUTULLI_1_GET_STATS: "true"
      VRKN_TAUTULLI_1_GET_STATS_RUN_SECONDS: 3600
      VRKN_SONARR_1_URL: ${SERVER_IP}:${SONARR_PORT}
      VRKN_SONARR_1_APIKEY: ${SONARR_API_KEY}
      VRKN_SONARR_1_SSL: "false"
      VRKN_SONARR_1_VERIFY_SSL: "false"
      VRKN_SONARR_1_MISSING_DAYS: 7
      VRKN_SONARR_1_MISSING_DAYS_RUN_SECONDS: 300
      VRKN_SONARR_1_FUTURE_DAYS: 1
      VRKN_SONARR_1_FUTURE_DAYS_RUN_SECONDS: 300
      VRKN_SONARR_1_QUEUE: "true"
      VRKN_SONARR_1_QUEUE_RUN_SECONDS: 300
      VRKN_RADARR_1_URL: ${SERVER_IP}:${RADARR_PORT}
      VRKN_RADARR_1_APIKEY: ${RADARR_API_KEY}
      VRKN_RADARR_1_SSL: "false"
      VRKN_RADARR_1_VERIFY_SSL: "false"
      VRKN_RADARR_1_QUEUE: "true"
      VRKN_RADARR_1_QUEUE_RUN_SECONDS: 300
      VRKN_RADARR_1_GET_MISSING: "true"
      VRKN_RADARR_1_GET_MISSING_RUN_SECONDS: 300
      VRKN_UNIFI_1_URL: ${UNIFI_HOST}
      VRKN_UNIFI_1_USERNAME: ${UNIFI_USER}
      VRKN_UNIFI_1_PASSWORD: ${UNIFI_PASS}
      VRKN_UNIFI_1_SITE: default
      VRKN_UNIFI_1_USG_NAME: USG
      VRKN_UNIFI_1_SSL: "true"
      VRKN_UNIFI_1_VERIFY_SSL: "false"
      VRKN_UNIFI_1_GET_USG_STATS_RUN_SECONDS: 300

############################# DOWNLOADERS

# TransmissionBT - Torrent Downloader
# ONLY ACCESSIBLE THROUGH https://domain.com/transmission/web/ if using PathPrefix
  transmission-vpn:
    image: haugene/transmission-openvpn
    container_name: transmission-vpn
    hostname: transmission
    restart: unless-stopped
    networks:
      - default
    ports:
      - "9091:9091"
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${USERDIR}/docker/transmission-vpn/data:/data
      - ${USERDIR}/docker/transmission-vpn/config:/config
      - ${USERDIR}/Downloads:/downloads
    environment:
      OPENVPN_PROVIDER: ${VPN_PROVIDER}
      OPENVPN_USERNAME: ${VPN_USER}
      OPENVPN_PASSWORD: ${VPN_PASS}
      # This next one is optional. See here for more details -> https://haugene.github.io/docker-transmission-openvpn/run-from-docker-registry/
      # - OPENVPN_CONFIG="YYYYYYYYYYY"
      OPENVPN_OPTS: --inactive 3600 --ping 10 --ping-exit 60
      LOCAL_NETWORK: ${LOCAL_SUBNET}
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      UMASK_SET: 002
      TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "true"
      TRANSMISSION_RPC_HOST_WHITELIST: "127.0.0.1,${LOCAL_SUBNET}"
      TRANSMISSION_RPC_PASSWORD: ${TRANSMISSION_USER}
      TRANSMISSION_RPC_USERNAME: ${TRANSMISSION_PASS}
      TRANSMISSION_UMASK: 002
      TRANSMISSION_RATIO_LIMIT: 0.01
      TRANSMISSION_RATIO_LIMIT_ENABLED: "true"
      TRANSMISSION_ALT_SPEED_DOWN: 2000
      TRANSMISSION_ALT_SPEED_ENABLED: "true"
      TRANSMISSION_ALT_SPEED_UP: 15
      TRANSMISSION_SPEED_LIMIT_DOWN: 6000
      TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED: "true"
      TRANSMISSION_SPEED_LIMIT_UP: 30
      TRANSMISSION_SPEED_LIMIT_UP_ENABLED: "true"
      TRANSMISSION_INCOMPLETE_DIR: /downloads/incomplete
      TRANSMISSION_INCOMPLETE_DIR_ENABLED: "true"
      TRANSMISSION_WATCH_DIR: /downloads
      TRANSMISSION_WATCH_DIR_ENABLED: "true"
      TRANSMISSION_DOWNLOAD_DIR: /downloads/completed
  